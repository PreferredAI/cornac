build: false

environment:
  matrix:
    - PYTHON_VERSION: "3.5"
      MINICONDA: "C:\\Miniconda3-x64"
      PYTHON_ARCH: "64"
    - PYTHON_VERSION: "3.6"
      MINICONDA: "C:\\Miniconda3-x64"
      PYTHON_ARCH: "64"

matrix:
    fast_finish: true

init:
  - "ECHO %PYTHON_VERSION% %MINICONDA%"

install:
  - "set PATH=%MINICONDA%;%MINICONDA%\\Scripts;%PATH%"
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda info -a
  - "conda create -q -n test-environment python=%PYTHON_VERSION% numpy scipy pandas"
  - activate test-environment
  - python -m pip install --upgrade pip
  - pip install pytest
  
  - python --version
  - python -c "import struct; print(struct.calcsize('P') * 8)"
  
  # Install TensorFlow CPU version.
  - ps: if ($env:PYTHON_VERSION -eq "3.5") { pip install https://storage.googleapis.com/tensorflow/windows/cpu/tensorflow-1.12.0-cp35-cp35m-win_amd64.whl } elseif ($env:PYTHON_VERSION -eq "3.6") { pip install https://storage.googleapis.com/tensorflow/windows/cpu/tensorflow-1.12.0-cp35-cp35m-win_amd64.whl }
  # Install PyTorch CPU version.
  - ps: if ($env:PYTHON_VERSION -eq "3.5") { pip install https://download.pytorch.org/whl/cpu/torch-1.0.0-cp35-cp35m-win_amd64.whl } elseif ($env:PYTHON_VERSION -eq "3.6") { pip install https://download.pytorch.org/whl/cpu/torch-1.0.0-cp36-cp36m-win_amd64.whl }
  - python setup.py install

test_script:
  - python -m pytest

after_test:
  - python setup.py bdist_wheel

artifacts:
  - path: dist\*