# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: master

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: Building on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macos-13, macos-14]
        # python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
        versions:
          - { python: "3.8", numpy: 1.22.4 }
          - { python: "3.9", numpy: 1.22.4 }
          - { python: "3.10", numpy: 1.22.4 }
          - { python: "3.11", numpy: 1.24.3 }
          - { python: "3.12", numpy: 1.26.4 }
        
    steps:
    - name: Get number of CPU cores
      uses: SimenB/github-actions-cpu-cores@v2
      id: cpu-cores

    - uses: actions/checkout@v4

    - name: Setup Python ${{ matrix.versions.python }}
      if: ${{ (matrix.os != 'macos-14') || ((matrix.os == 'macos-14') && (matrix.versions.python != '3.8') && (matrix.versions.python != '3.9')) }}
      uses: actions/setup-python@v5
      id: pysetup
      with:
        python-version: ${{ matrix.versions.python }}
        cache: 'pip'

    - name: Setup Python 3.8-3.9 - macos-arm
      if: ${{ (matrix.os == 'macos-14') && ((matrix.versions.python == '3.8') || (matrix.versions.python == '3.9')) }}
      run: |
        brew update
        brew install python@${{ matrix.versions.python }}
        curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
        python${{ matrix.versions.python }} get-pip.py

    - name: Create Python alias for Windows 
      if: matrix.os == 'windows-latest'
      run: |
        $newPath = "${{ steps.pysetup.outputs.python-path }}".Replace("python.exe", "python${{ matrix.versions.python }}.exe")
        New-Item -ItemType HardLink -Path "$newPath" -Value "${{ steps.pysetup.outputs.python-path }}"

    - name: Display Python and Pip versions
      run: | 
        python${{ matrix.versions.python }} -c "import sys; print(sys.version)"
        pip --version

    - name: Upgrade pip wheel setuptools
      run: pip install wheel setuptools pip --upgrade

    - name: Install numpy ${{ matrix.versions.numpy }}
      run: pip install numpy==${{ matrix.versions.numpy }}
    
    - name: Display numpy version
      run: python${{ matrix.versions.python }} -c "import numpy; print(numpy.__version__)"

    - name: Install other dependencies
      run: |
        pip install scipy Cython pytest pytest-cov flake8
        python${{ matrix.versions.python }} setup.py build_ext -j${{ steps.cpu-cores.outputs.count }}
        pip install -e .[tests]

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Test with pytest
      run: |
        pytest --cov=cornac
