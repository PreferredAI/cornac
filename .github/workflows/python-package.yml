# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: master

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: Building on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # Window 64 bit
          - os: windows-latest
            python-version: '3.8'
            platform_id: win_amd64
          - os: windows-latest
            python-version: '3.9'
            platform_id: win_amd64
          - os: windows-latest
            python-version: '3.10'
            platform_id: win_amd64
          - os: windows-latest
            python-version: '3.11'
            platform_id: win_amd64
          - os: windows-latest
            python-version: '3.12'
            platform_id: win_amd64

          # Linux 64 bit manylinux2014
          - os: ubuntu-latest
            python-version: '3.8'
            platform_id: manylinux_x86_64
            manylinux_image: manylinux2014
          - os: ubuntu-latest
            python-version: '3.9'
            platform_id: manylinux_x86_64
            manylinux_image: manylinux2014
          - os: ubuntu-latest
            python-version: '3.10'
            platform_id: manylinux_x86_64
            manylinux_image: manylinux2014
          - os: ubuntu-latest
            python-version: '3.11'
            platform_id: manylinux_x86_64
            manylinux_image: manylinux2014
          - os: ubuntu-latest
            python-version: '3.12'
            platform_id: manylinux_x86_64
            manylinux_image: manylinux2014

          # MacOS x86_64
          - os: macos-latest
            python-version: '3.8'
            platform_id: macosx_x86_64
          - os: macos-latest
            python-version: '3.9'
            platform_id: macosx_x86_64
          - os: macos-latest
            python-version: '3.10'
            platform_id: macosx_x86_64
          - os: macos-latest
            python-version: '3.11'
            platform_id: macosx_x86_64
          - os: macos-latest
            python-version: '3.12'
            platform_id: macosx_x86_64

          # MacOS arm64
          - os: macos-14
            python-version: '3.8'
            platform_id: macosx_arm64
          - os: macos-14
            python-version: '3.9'
            platform_id: macosx_arm64
          - os: macos-14
            python-version: '3.10'
            platform_id: macosx_arm64
          - os: macos-14
            python-version: '3.11'
            platform_id: macosx_arm64
          - os: macos-14
            python-version: '3.12'
            platform_id: macosx_arm64

    steps:
    - uses: actions/checkout@v2
    
    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Display Python version
      run: python -c "import sys; print(sys.version)"

    - name: Upgrade pip wheel setuptools
      run: python -m pip install wheel setuptools pip --upgrade

    - name: Install numpy for Python 3.8
      if: matrix.python-version == '3.8'
      run: python -m pip install numpy==1.20.3
        
    - name: Install numpy for Python 3.9
      if: matrix.python-version == '3.9'
      run: python -m pip install numpy==1.20.3

    - name: Install numpy for Python 3.10
      if: matrix.python-version == '3.10'
      run: python -m pip install numpy==1.22.4

    - name: Install numpy for Python 3.11
      if: matrix.python-version == '3.11'
      run: python -m pip install numpy==1.24.3

    - name: Install numpy for Python 3.12
      if: matrix.python-version == '3.12'
      run: python -m pip install numpy==1.26.4

    - name: Display numpy version
      run: python -c "import numpy; print(numpy.__version__)"

    - name: Install other dependencies
      run: |
        python -m pip install scipy Cython pytest pytest-cov flake8
        python -m pip install -e .[tests]

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Test with pytest
      run: |
        python -m pytest --cov=cornac
